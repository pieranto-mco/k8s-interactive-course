name: Deploy to GitHub Pages

on:
  # Attiva il workflow sui push al branch main
  push:
    branches: [ main ]
  
  # Consente di eseguire manualmente il workflow dalla tab Actions
  workflow_dispatch:

# Imposta i permessi necessari per il deployment su GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Consente solo un deployment concorrente, saltando le run in coda tra quella in corso e quella piÃ¹ recente
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job di build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Lint
        run: pnpm run lint
        
      - name: Build
        run: pnpm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Job di deployment
  deploy:
    environment:
      name: pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
